---
type: container
name: parks-mongodb
description: MongoDB container
container:
  image: "applatix/parksdata"
  resources:
    mem_mib: 2048
    cpu_cores: 0.3

---
type: container
name: run-nationalparks-node
container:
  resources:
    mem_mib: 1024
    cpu_cores: 0.4
    disk_gb: 2
  image: applatix/nationalparks
  docker_options: 
  command: 

---
type: deployment
name: deploy-parks-mongo
inputs:
  parameters:
    appname:
      default: "mlb-app"
application:
  name: "%%appname%%"
deployment:
  name: "mongo-deploy"
scale:
  min: 1
external_routes:
 
internal_routes:
  - name: parks-mongo
    ports:
      - name: tcp
        port: 27017
        target_port: 27017
containers:
  - server:
      template: parks-mongodb
      parameters:
       
---
type: deployment
name: deploy-nationalparks
inputs:
  parameters:
    code:
      default: "%%session.artifacts%%"
    appname:
      default: "nationalparks-app"
application:
  name: "%%appname%%"
deployment:
  name: "run-nationalparks-deploy"
scale:
  min: 1
external_routes:
  - name: nationalparks
    port: 8088
    target_port: 80
    redirect_http_to_https: true
    ip_white_list:
      - 0.0.0.0/0
containers:
  - server:
      template: run-nationalparks-node
      parameters:

---
type: workflow
name: Deploy National Parks 
description: This is the workflow to deploy Mongo container and a ubuntu container with compiled war file. Once the container is started the war is exploded into a full fledged java based web application.
inputs:
  parameters:
    appname:
      default: "nationalparks-app"
steps:
  - deploy-mongo:
      template: deploy-parks-mongo

  - deploy-nationalparks:
      template: deploy-nationalparks
